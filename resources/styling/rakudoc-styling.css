.comment {
  color: #666;
}

.string {
  color: #006810;
}

.string .source,
.string .meta.embedded.line {
  color: #5A5A5A;
}

.string .punctuation.section.embedded {
  color: #920B2D;
}

.string .punctuation.section.embedded .source {
  color: #920B2D;
}

.constant.numeric {
  color: #D14;
}

.constant.language {
  color: #606aa1;
}

.constant.character,
.constant.other {
  color: #606aa1;
}

.constant.symbol {
  color: #990073;
}

.constant.numeric.line-number.find-in-files .match {
  color: rgba(143, 190, 0, 0.63);
}

/* For 'rw', 'copy' etc. */
.entity.name.type.trait {
  color: #555CEE;
}

.entity.name.type.class {
  color: #363F84;
}

.variable.other {
  color: #CC0050;
}

.variable {
  color: #08056B;
}

.variable.parameter {
  color: #606aa1;
}

.keyword {
  color: #222;
  font-weight: bold;
}

.keyword.unit {
  color: #445588;
}

.keyword.special-method {
  color: #0056C3;
}

.storage {
  color: #222;
}

.storage.type {
  color: #222;
}

.entity.name.class {
  color: #606aa1;
}

.entity.other.inherited-class {
  color: #606aa1;
}

.entity.name.function {
  color: #900;
}

/* Regex/Grammars */
.string.regexp.construct {
  color: #0078FF;
}

/* `token`, `regex` */
.storage.type.declare.regexp.named {
  color: #393276;
}

/* The name of the named regex */
.entity.name.function.regexp {
  color: #7415E9;
}

.entity.name.function.regexp.named.TOP {
  color: #158de9;
}

/* /<this>/ */
.variable.other.identifier.regexname {
  color: #a52020;
}

.entity.name.tag {
  color: #008080;
}

.entity.other.attribute-name {
  color: #458;
  font-weight: bold;
}

.entity.name.filename.find-in-files {
  color: #E6DB74;
}

.support.constant,
.support.function,
.support.type {
  color: #458;
}

.support.class {
  color: #004040;
}

.invalid {
  color: #F8F8F0;
  background-color: #00A8C6;
}

.invalid.deprecated {
  color: #F8F8F0;
  background-color: #8FBE00;
}

.meta.structure.dictionary.json > .string.quoted.double.json,
.meta.structure.dictionary.json > .string.quoted.double.json .punctuation.string {
  color: #000080;
}

.meta.structure.dictionary.value.json > .string.quoted.double.json {
  color: #d14;
}

.meta.diff,
.meta.diff.header {
  color: #75715E;
}

.css.support.property-name {
  font-weight: bold;
  color: #333;
}

.css.constant {
  color: #099;
}

.source.gfm {
  color: #444;
}

.gfm .markup.heading {
  color: #111;
}

.gfm .link {
  color: #888;
}

.gfm .variable.list {
  color: #888;
}

.markdown .paragraph {
  color: #444;
}

.markdown .heading {
  color: #111;
}

.markdown .link {
  color: #888;
}

.markdown .link .string {
  color: #888;
}

.storage, .storage.declarator {
  font-weight: bold;
  color: #A626A4;
}

/* Some preexisting Atom tags, probably not needed but moving to the end */
atom-text-editor {
  background-color: white;
  color: #555;
}

atom-text-editor .invisible-character {
  color: rgba(85, 85, 85, 0.2);
}

atom-text-editor .indent-guide {
  color: rgba(85, 85, 85, 0.2);
}

atom-text-editor .wrap-guide {
  background-color: rgba(85, 85, 85, 0.2);
}

atom-text-editor .gutter {
  color: #555;
  background: white;
}

atom-text-editor .gutter .line-number.folded,
atom-text-editor .gutter .line-number:after,
atom-text-editor .fold-marker:after {
  color: #e87b00;
}

atom-text-editor .invisible {
  color: #555;
}

atom-text-editor .selection .region {
  background-color: #e1e1e1;
}

atom-text-editor .bracket-matcher .region {
  background-color: #C9C9C9;
  opacity: 0.7;
  border-bottom: 0 none;
}

atom-text-editor.is-focused .cursor {
  border-color: black;
}

atom-text-editor.is-focused .selection .region {
  background-color: #afc4da;
}

atom-text-editor.is-focused .line-number.cursor-line-no-selection,
atom-text-editor.is-focused .line.cursor-line {
  background-color: rgba(255, 255, 134, 0.34);
}

.pod {
  padding: 0;
  margin: 0;
}

.pod-content {
  border: #F2C100 0.2em solid;
  margin: 1em;
  padding: 2em;
  border-radius: 1em;
  box-shadow: 0.5em 0.5em 1em #888888;
}
.pod-content dt {
  font-weight: bold;
  margin-bottom: 0.2em;
}
.pod-content dd {
  margin-bottom: 1em;
}
.pod-content h1 a, .pod-content h2 a, .pod-content h3 a, .pod-content h4 a, .pod-content h5 a, .pod-content h6 a {
  color: black;
}
.pod-content h1 {
  padding-top: 0.25em;
}

.pod-table tr:nth-child(odd) {
  background-color: rgba(0, 0, 0, 0.031373);
}

header {
  text-align: center;
  position: sticky;
  top: 0;
  left: 0;
  width: 100%;
  font-family: sans-serif;
  font-weight: bold;
  border-radius: 0 0 1em 1em;
  margin: 0 0 1em 0;
  padding: 0.5em 0em 0.5em 0em;
  line-height: 0.75em;
  overflow: hidden;
  border-top: none;
  font-size: x-large;
  background: rgba(230, 219, 208, 0.7411764706);
  z-index: 10;
}
header #Camelia_bug {
  width: 100px;
  height: 48px;
  float: left;
}

kbd {
  font-family: "Droid Sans Mono", "Luxi Mono", "Inconsolata", monospace;
}

samp {
  font-family: "Terminus", "Courier", "Lucida Console", monospace;
}

u {
  text-decoration: none;
}

a {
  text-decoration: none;
}

pre {
  background-color: rgba(120, 60, 0, 0.045);
  border: 1px solid #CFCFCF;
  padding: 0.6ex;
  color: black;
  overflow: auto;
  white-space: pre-wrap;
  word-break: break-all;
}

nav {
  display: grid;
  grid-gap: 0.75em;
  width: 25vw;
  padding: 0.75em;
  border-radius: 1em;
  background-color: rgba(187, 183, 178, 0.2705882353);
  float: left;
  margin: 0 0.75em 0.7em 0;
}

#_TOC {
  grid-row: 1;
}

#_Glossary {
  grid-row: 2;
}

.glossary {
  display: grid;
  grid-template-columns: 10% 80% 10%;
  border-radius: inherit;
  padding: 15px;
  background-color: inherit;
}
.glossary > * > a {
  text-decoration: none;
  color: navy;
}

.glossary-caption {
  grid-column: 1/span 3;
  justify-self: center;
  font-size: 120%;
  font-weight: bold;
}

.glossary-defn {
  grid-column: 1/span 2;
  font-size: 11pt;
  line-height: 1.1;
  margin-top: 0.4em;
  color: brown;
}
.glossary-defn.header {
  font-weight: bold;
}

.glossary-place {
  grid-column: 2/span 2;
  line-height: 1.1;
}
.glossary-place.header {
  font-weight: bold;
  color: navy;
}

#_TOC {
  border-collapse: collapse;
  border-radius: inherit;
  background-color: inherit;
  padding: 15px;
  color: black;
}
#_TOC caption {
  text-align: center;
  font-size: 120%;
  font-weight: bold;
}
#_TOC tr {
  padding: 0.25pt 5pt 0 0;
  font-size: 11pt;
}
#_TOC tr td a {
  text-decoration: none;
  color: navy;
}
#_TOC tr.toc-level-1 td {
  padding-top: 4pt;
  font-weight: bold;
  position: relative;
  left: 0;
}
#_TOC tr.toc-level-1 td:first-child td {
  padding-top: 0;
}
#_TOC tr.toc-level-2 td {
  padding-top: 3pt;
  position: relative;
  left: 6px;
}
#_TOC tr.toc-level-3 td {
  padding-top: 2pt;
  font-size: 0.9em;
  position: relative;
  left: 8px;
}
#_TOC tr.toc-level-4 td {
  padding-top: 2pt;
  font-size: 0.8em;
  position: relative;
  left: 10px;
}

.subtitle {
  font-style: italic;
  text-align: center;
}

footer {
  padding: 5px;
  text-align: center;
  font-size: 80%;
  margin: 0 1em 1em;
  border-color: #F2C100;
  background-color: #F5EF7B;
  border-radius: 1em;
  border-style: solid;
  box-shadow: 0.5em 0.5em 1em #888888 p;
  box-shadow-margin: 3px 0;
}

.footnotes {
  border-style: solid;
  border-color: blue;
  border-radius: 1em;
}

.RakudocNoFormatCode {
  border-width: 1px;
  border-style: inset;
  border-color: chocolate;
  border-radius: 5px;
}
.RakudocNoFormatCode span:nth-of-type(1) {
  color: red;
  font-weight: bold;
}

.RakudocError {
  border-style: solid;
  border-color: red;
  border-radius: 0.5em;
  border-width: 1px;
  margin: 0.5em -0.5em -0.5em;
}
.RakudocError legend {
  color: red;
  font-size: small;
}
.RakudocError fieldset {
  display: flex;
  border-style: solid;
  border-color: blue;
  border-radius: 0.5em;
  border-width: 1px;
}
.RakudocError fieldset legend {
  color: blue;
}

.pod-output {
  font-family: "Lucida Console", "Courier New", monospaced;
  font-weight: 600;
}

.pod-input {
  font-family: "Monaco", "Lucida Console", "Courier New", monospaced;
  font-weight: 300;
}

.pod-nested {
  margin: 0.25rem 0 0.25rem 1rem;
}
